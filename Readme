# Minecraft Player Stats Stream

This Go application fetches player statistics from a Minecraft server and stores them in a Redis database. It provides an API for retrieving player stats and supports both RCON and JSON-based data sources.

## Features

- Fetch player stats from Minecraft server using RCON or JSON files.
- Store player stats in Redis for fast and efficient retrieval.
- REST API for querying player stats.
- Docker and Docker Compose support for easy deployment.

## Usage

### REST API Endpoints

- `GET /playerstats?playername=<playername>[&stattype=<stattype>]`: Retrieve the stats of a specific player by providing the `playername` query parameter. Optionally filter by a specific `stattype`.

### Environment Variables

- `POLLING_INTERVAL`: The interval at which the application polls the Minecraft server for player stats (e.g. `5m` for 5 minutes).
- `STATS_SOURCE`: The source of the stats, either `rcon` or `json`.
- `JSON_STATS_DIRECTORY`: The directory containing JSON stat files (only required if `STATS_SOURCE` is `json`).
- `RCON_ADDRESS`: The address of the Minecraft server's RCON interface (only required if `STATS_SOURCE` is `rcon`).
- `RCON_PASSWORD`: The password for the Minecraft server's RCON interface (only required if `STATS_SOURCE` is `rcon`).
- `REDIS_ADDR`: The address of the Redis database.
- `REDIS_PASSWORD`: The password for the Redis database.
- `REDIS_DB`: The Redis database index to use.

### Docker Compose

To run the application using Docker Compose, use the following command:

```bash
docker-compose up
```

### Example Usage

Querying Player Stats
To retrieve the stats of a specific player named "pvpNJ", use the following API endpoint:

```http
GET /playerstats?playername=pvpNJ
```
To retrieve a specific stat (e.g. "minecraft:mined:minecraft:dirt") for player "pvpNJ", use the following API endpoint:

```http
GET /playerstats?playername=pvpNJ&stattype=minecraft:mined:minecraft:dirt
```

#### Contributing

Contributions are welcome! Please feel free to open a pull request or report issues.

License

This project is licensed under the MIT License.

